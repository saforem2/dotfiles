{
  "name": "coc-jedi",
  "version": "0.25.2",
  "jlsName": "jedi-language-server",
  "jlsVersion": "0.30.2",
  "jlsVenv": ".venv",
  "description": "coc.nvim wrapper for the jedi-language-server for Python",
  "author": "Sam Roeca <samuel.roeca@gmail.com>",
  "license": "MIT",
  "main": "lib/index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/pappasam/coc-jedi.git"
  },
  "keywords": [
    "coc.nvim",
    "python",
    "jedi",
    "vim",
    "neovim"
  ],
  "engines": {
    "coc": "^0.0.70",
    "node": ">=8.10.0"
  },
  "scripts": {
    "clean": "rimraf lib",
    "watch": "webpack --watch",
    "build": "webpack",
    "prepare": "npm-run-all clean build"
  },
  "devDependencies": {
    "@types/node": "^13.13.1",
    "@types/rimraf": "^3.0.0",
    "coc.nvim": "^0.0.77",
    "npm-run-all": "^4.1.5",
    "rimraf": "^3.0.2",
    "ts-loader": "^7.0.1",
    "typescript": "^3.8.3",
    "webpack": "^4.42.1",
    "webpack-cli": "^3.3.11"
  },
  "activationEvents": [
    "onLanguage:python"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "coc-jedi configuration",
      "properties": {
        "jedi.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable jedi-language-server."
        },
        "jedi.startupMessage": {
          "type": "boolean",
          "default": false,
          "description": "Enable/disable jedi-language-server's message on startup"
        },
        "jedi.markupKindPreferred": {
          "type": "string",
          "enum": [
            "markdown",
            "plaintext"
          ],
          "description": "The preferred MarkupKind for jedi-language-server messages. If omitted, defaults to client preferences"
        },
        "jedi.trace.server": {
          "type": "string",
          "default": "off",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "description": "Trace level of jedi-language-server"
        },
        "jedi.jediSettings.autoImportModules": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Modules that will not be analyzed but imported. Improves autocompletion but loses goto definition"
        },
        "jedi.jediSettings.caseInsensitiveCompletion": {
          "type": "boolean",
          "default": true,
          "description": "Completions are by default case insensitive."
        },
        "jedi.executable.command": {
          "type": "string",
          "description": "The jedi-language-server executable. If omitted, coc-managed default is used"
        },
        "jedi.executable.args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Args passed to jedi-language-server executable. Ignored if command is null"
        },
        "jedi.codeAction.nameExtractFunction": {
          "type": "string",
          "default": "jls_extract_def",
          "description": "Function name generated by the 'extract_function' codeAction"
        },
        "jedi.codeAction.nameExtractVariable": {
          "type": "string",
          "default": "jls_extract_var",
          "description": "Variable name generated by the 'extract_variable' codeAction"
        },
        "jedi.completion.disableSnippets": {
          "type": "boolean",
          "default": false,
          "description": "Enable (or disable) diagnostics provided by Jedi"
        },
        "jedi.completion.resolveEagerly": {
          "type": "boolean",
          "default": false,
          "description": "Return all completion results in initial completion request"
        },
        "jedi.diagnostics.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable (or disable) diagnostics provided by Jedi"
        },
        "jedi.diagnostics.didOpen": {
          "type": "boolean",
          "default": true,
          "description": "Run diagnostics on document open"
        },
        "jedi.diagnostics.didChange": {
          "type": "boolean",
          "default": true,
          "description": "Run diagnostics on in-memory document change"
        },
        "jedi.diagnostics.didSave": {
          "type": "boolean",
          "default": true,
          "description": "Run diagnostics on document save (to disk)"
        },
        "jedi.workspace.extraPaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Add additional paths for Jedi's analysis. Useful with vendor directories, packages in a non-standard location, etc."
        },
        "jedi.workspace.symbols.maxSymbols": {
          "type": "number",
          "default": 20,
          "description": "Maximum number of symbols returned by a call to `workspace/symbols`"
        },
        "jedi.workspace.symbols.ignoreFolders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".nox",
            ".tox",
            ".venv",
            "__pycache__",
            "venv"
          ],
          "description": "Performance optimization that sets names of folders that are ignored for the workspace symbols action."
        }
      }
    }
  },
  "dependencies": {}
}
